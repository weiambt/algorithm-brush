package 第六讲双指针BFS与图论;

import java.util.*;
import java.math.*;
import java.io.*;

public class _02献给阿尔吉侬的花束 {
	static int INF = 0x3f3f3f3f;
	static int N = 210 , M = 2*N;
	static char[][] arr = new char[N][N];
	static int[][] vis = new int[N][N];
	static int[][] cen = new int[N][N];
	static int t,r,c,sx,sy,ex,ey;
	static int bfs() {
		vis[sx][sy] = 1;
		Queue<Integer[]> q = new LinkedList<>();
	}
	public static void main(String[] sss) {
		Scanner sc = new Scanner(System.in);
		t = sc.nextInt();
		while(t-->0) {
			Arrays.fill(cen, INF);
			Arrays.fill(vis, 0);

			r = sc.nextInt();
			c = sc.nextInt();
			for(int i=1;i<=r;i++) {
				String s = sc.nextLine();
				for(int j=1;j<=c;j++) {
					arr[i][j] = s.charAt(j-1);
					if(arr[i][j]=='S') {
						sx = i;sy = j;
					}
					if(arr[i][j]=='E') {
						ex = i;ey = j;
					}
				}
			}
			
			int ans = bfs();
			System.out.println(ans);
		}
		
		
	}
}
