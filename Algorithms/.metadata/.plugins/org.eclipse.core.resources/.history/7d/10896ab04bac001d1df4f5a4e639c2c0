package 第六讲双指针BFS与图论;

import java.util.*;
import java.math.*;
import java.io.*;

public class _01日志统计 {
	static int INF = 0x3f3f3f3f;
	static int N = 101000 , M = 2*N;
	static Integer[][] arr = new Integer[N][2];
	static HashSet<Integer> set = new HashSet<Integer>();
	static int n,d,k;
	static int[] q = new int[N];

	public static void main(String[] sss) {
		Scanner sc = new Scanner(System.in);
		n = sc.nextInt();
		d = sc.nextInt();
		k = sc.nextInt();
		for(int i=1;i<=n;i++) {
			arr[i][0] = sc.nextInt();
			arr[i][1] = sc.nextInt();
		}
		Arrays.sort(arr,1,n+1,(a,b)->(
				a[0]!=b[0]?a[0]-b[0]:a[1]-b[1]));
		
		for(int i=1,j=1;i<=n;i++) {
			int now = arr[i][0];
			
			while(j<=n && j>i && arr[j][1] == arr[i][1]) {
				if(arr[j][0] - arr[i][0] + 1 <= d && cnt<=k) {
					set.add(arr[i][1]);
				}
				j++;
			}
			int time = arr[j-1][0] - arr[i][0] + 1;
			if(time>=d && ) System.out.println(i);
			
		}
	}
}
